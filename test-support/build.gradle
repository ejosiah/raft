plugins {
    id 'java'
    id 'application'
    id "io.freefair.lombok" version "2.7"
}

version 'unspecified'


sourceCompatibility = 1.8

mainClassName = 'com.josiahebhomenye.test.support.Main'

repositories {
    mavenCentral()
}

configurations.create('ajtools')
configurations.create('aspectpath')
configurations.create('ajInpath')


dependencies {

    compile project(":raft-server")
    compile project(":raft-protocol")

    compile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.mockito', name: 'mockito-core', version: '3.1.0'

    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

    compile group: 'io.netty', name: 'netty-all', version: '4.1.43.Final'
    compile group: 'com.typesafe', name: 'config', version: '1.4.0'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.29'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'

    ajtools "org.aspectj:aspectjtools:${aspectjVersion}"
    compile "org.aspectj:aspectjrt:${aspectjVersion}"
}


task Ajc(dependsOn: delombok){

    def sourceSet = sourceSets.main
    def srcDir = "${buildDir.absolutePath}/delombok/main"

    FileCollection aspectpath = configurations.findByName("aspectpath")
    FileCollection ajInpath = configurations.findByName("ajInpath")

    mkdir(srcDir)

    def xlint = 'ignore'
    def iajcArgs = [
                    classpath           : sourceSet.compileClasspath.asPath,
                    destDir      		: sourceSet.java.outputDir,
                    s                   : sourceSet.java.outputDir,
                    source              : project.convention.plugins.java.sourceCompatibility,
                    target              : project.convention.plugins.java.targetCompatibility,
                    inpath       	    : srcDir,
                    xlint               : xlint,
                    fork                : 'false',
                    aspectPath          : aspectpath.asPath,
                    showWeaveInfo       : 'true']

    ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: project.configurations.ajtools.asPath)
    ant.iajc(iajcArgs) {
        sourceRoots {
            pathelement(location: srcDir)
        }
    }
}

Ajc.setDependsOn(compileJava.dependsOn)
//Ajc.dependsOn(Ajc.aspectpath)
//Ajc.dependsOn(Ajc.ajInpath)
compileJava.getActions().clear()
compileJava.dependsOn(Ajc)


task print{
    println("${sourceSets.main.java.outputDir}")
//    println("${sourceSets.main.runtimeClasspath.asPath}")
//    print(project.buildDir)
}

task runApp(type: JavaExec, dependsOn: Ajc){
    classpath = sourceSets.main.runtimeClasspath
    main = mainClassName
    standardInput = System.in
}

run.standardInput = System.in